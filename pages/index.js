import { Inter } from "next/font/google";
import Link from "next/link";
import Head from "next/head";
import Blog_card from "@/components/blog_card";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const blogData = [
    {
      id:0,
      title: "How to learn flask",
      content:
        "Flask is a micro web framework written in Python. It is classified as a microframework because it does not require particular tools or libraries.[2] It has no database abstraction layer, form validation, or any other components where pre-existing third-party libraries provide common functions. However, Flask supports extensions that can add application features as if they were implemented in Flask itself. Extensions exist for object-relational mappers, form validation, upload handling, various open authentication technologies and several common framework related tools.",
      author: "Harry bhai",
    },
    {id:1,
      title: "How to learn JavaScript",
      content:
        "JavaScript (/ˈdʒɑːvəskrɪpt/),[10] often abbreviated JS, is a programming language that is one of the core technologies of the World Wide Web, alongside HTML and CSS.[11] Over 97% of websites use JavaScript on the client side for web page behavior,[12] often incorporating third-party libraries.[13] All major web browsers have a dedicated JavaScript engine to execute the code on users' devices. JavaScript is a high-level, often just-in-time compiled language that conforms to the ECMAScript standard.[14] It has dynamic typing, prototype-based object-orientation, and first-class functions. It is multi-paradigm, supporting event-driven, functional, and imperative programming styles. It has application programming interfaces (APIs) for working with text, dates, regular expressions, standard data structures, and the Document Object Model (DOM). The ECMAScript standard does not include any input/output (I/O), such as networking, storage, or graphics facilities. In practice, the web browser or other runtime system provides JavaScript APIs for I/O. JavaScript engines were originally used only in web browsers, but are now core components of some servers and a variety of applications. The most popular runtime system for this usage is Node.js. Although Java and JavaScript are similar in name, syntax, and respective standard libraries, the two languages are distinct and differ greatly in design.",
      author: "Harry bhai",
    },
    {id:2,
      title: "How to learn nextjs",
      content:
        "JavaScript (/ˈdʒɑːvəskrɪpt/),[10] often abbreviated JS, is a programming language that is one of the core technologies of the World Wide Web, alongside HTML and CSS.[11] Over 97% of websites use JavaScript on the client side for web page behavior,[12] often incorporating third-party libraries.[13] All major web browsers have a dedicated JavaScript engine to execute the code on users' devices. JavaScript is a high-level, often just-in-time compiled language that conforms to the ECMAScript standard.[14] It has dynamic typing, prototype-based object-orientation, and first-class functions. It is multi-paradigm, supporting event-driven, functional, and imperative programming styles. It has application programming interfaces (APIs) for working with text, dates, regular expressions, standard data structures, and the Document Object Model (DOM). The ECMAScript standard does not include any input/output (I/O), such as networking, storage, or graphics facilities. In practice, the web browser or other runtime system provides JavaScript APIs for I/O. JavaScript engines were originally used only in web browsers, but are now core components of some servers and a variety of applications. The most popular runtime system for this usage is Node.js. Although Java and JavaScript are similar in name, syntax, and respective standard libraries, the two languages are distinct and differ greatly in design.",
      author: "Harry bhai",
    },
  ];

  return (
    <>
      <Head>
        <title>Quiet Coder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex">
        <div className="flex flex-col mx-auto mt-28">
          <p className="mx-auto font-bold text-5xl">CodeBlox</p>
          <p className="font-mono my-8 ">
            A blogging website, by a coder for the coders
          </p>
        </div>
      </div>

      <div className="flex flex-col items-center">
        <span className="text-3xl font-sans self-start ml-8 font-medium">
          Latest Blogs
        </span>
        {/* <div className="w-full border border-blue-600 "></div> */}
        <div className="cards grid lg:grid-cols-3 sm:grid-cols-2 mt-5 pb-6 gap-y-7 ">
          {blogData.map((elem) => (
            <Blog_card key={elem.id} title={elem.title} disc={elem.content} />
          ))}
        </div>
        <Link href="/about">
          <button className="rounded-md border border-gray-600 px-3.5 py-1.5 mb-5 text-base font-semibold leading-7 text-gray-600 hover:bg-gray-300/40 hover:shadow-violet-200 hover:shadow-lg transition-all ">
            See More
          </button>
        </Link>
      </div>
    </>
  );
}
